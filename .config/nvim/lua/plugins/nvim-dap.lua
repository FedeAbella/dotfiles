-- Debug Adapter Protocol
-- Requires configuring individual adapters
return {
    --    "mfussenegger/nvim-dap",
    --    dependencies = {
    --        "rcarriga/nvim-dap-ui",
    --        {
    --            "mxsdev/nvim-dap-vscode-js",
    --            dependencies = {
    --                "microsoft/vscode-js-debug",
    --                lazy = false,
    --                build = "npm install --legacy-peer-deps && npx gulp vsDebugServerBundle && mv dist out",
    --            },
    --        },
    --    },
    --    config = function()
    --        local dap = require("dap")
    --        local dapui = require("dapui")
    --
    --        -- DAP ui
    --        dapui.setup()
    --        dap.listeners.before.attach.dapui_config = function()
    --            dapui.open()
    --        end
    --        dap.listeners.before.launch.dapui_config = function()
    --            dapui.open()
    --        end
    --        dap.listeners.before.event_terminated.dapui_config = function()
    --            dapui.close()
    --        end
    --        dap.listeners.before.event_exited.dapui_config = function()
    --            dapui.close()
    --        end
    --
    --        -- Keymaps and sets
    --        vim.keymap.set("n", "<leader>Db", dap.toggle_breakpoint, { desc = { "Toggle Breakpoint" } })
    --        vim.keymap.set("n", "<leader>Dc", dap.continue, { desc = { "Continue debugger" } })
    --        vim.keymap.set("n", "<leader>Di", dap.step_into, { desc = { "Step into" } })
    --        vim.keymap.set("n", "<leader>Do", dap.step_out, { desc = { "Step out" } })
    --        vim.keymap.set("n", "<leader>Ds", dap.step_over, { desc = { "Step over" } })
    --
    --        vim.fn.sign_define("DapBreakpoint", { text = "Ôäç", texthl = "Error", linehl = "", numhl = "" })
    --
    --        -- Debuggers
    --        require("dap-vscode-js").setup({
    --            -- node_path = "node", -- Path of node executable. Defaults to $NODE_PATH, and then "node"
    --            debugger_path = "/home/fede/.local/share/nvim/lazy/vscode-js-debug", -- Path to vscode-js-debug installation.
    --            -- debugger_cmd = { "js-debug-adapter" }, -- Command to use to launch the debug server. Takes precedence over `node_path` and `debugger_path`.
    --            adapters = { "pwa-node", "pwa-chrome", "pwa-msedge", "node-terminal", "pwa-extensionHost" }, -- which adapters to register in nvim-dap
    --            -- log_file_path = "(stdpath cache)/dap_vscode_js.log" -- Path for file logging
    --            -- log_file_level = false -- Logging level for output to file. Set to false to disable file logging.
    --            -- log_console_level = vim.log.levels.ERROR -- Logging level for output to console. Set to false to disable console output.
    --        })
    --        for _, language in ipairs({ "typescript", "javascript" }) do
    --            require("dap").configurations[language] = {
    --                {
    --                    type = "pwa-node",
    --                    request = "launch",
    --                    name = "Launch file",
    --                    program = "${file}",
    --                    cwd = "${workspaceFolder}",
    --                },
    --                {
    --                    type = "pwa-node",
    --                    request = "attach",
    --                    name = "Attach",
    --                    processId = require("dap.utils").pick_process,
    --                    cwd = "${workspaceFolder}",
    --                },
    --                {
    --                    type = "pwa-node",
    --                    request = "launch",
    --                    name = "Debug Jest Tests",
    --                    -- trace = true, -- include debugger info
    --                    runtimeExecutable = "node",
    --                    runtimeArgs = {
    --                        --"sfdx-lwc-jest",
    --                        --"${file}",
    --                        "./node_modules/jest/bin/jest.js",
    --                        "--runinband",
    --                    },
    --                    rootPath = "${workspaceFolder}",
    --                    cwd = "${workspaceFolder}",
    --                    console = "integratedTerminal",
    --                    internalConsoleOptions = "neverOpen",
    --                },
    --            }
    --        end
    --    end,
}
